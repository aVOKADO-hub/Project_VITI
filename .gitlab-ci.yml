variables:
  DEBIAN_FRONTEND: noninteractive
  IMAGE_TAG: "$CI_REGISTRY_IMAGE/min-auth-proj:$CI_COMMIT_SHORT_SHA"
  DB_URL: "$CI_DB_URL"
  DB_USER: "$CI_DB_USER"
  DB_PASSWORD: "$CI_DB_PASSWORD"
  ANSIBLE_REPO_URL: 'https://gitlab.com/aVOKADO-hub/ansible_repo.git'
  ANSIBLE_CLONE_DIR: ansible_repo
  SSH_PRIVATE_KEY: "$CI_SSH_PRIVATE_KEY"

stages:
  - build
  - deploy

build_job:
  stage: build
  tags:
    - runner
  before_script:
    - apt-get update
    - apt-get install -y openjdk-21-jdk maven docker.io
    - rm -rf ~/.m2/repository/org/springframework/boot/
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$IMAGE_TAG" Back/
    - docker push "$IMAGE_TAG"
  cache:
    paths:
      - ~/.m2/repository/

deploy_job:
  stage: deploy
  tags:
    - runner
  needs:
    - job: build_job
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  before_script:
    # Установка зависимостей в окружении Runner'а (если не установлены глобально)
    - echo "Установка git, ansible, openssh-client..."
    # Для Alpine (частый образ Runner'ов по умолчанию)
    # - apk add --no-cache openssh-client git ansible
    # Для Debian/Ubuntu:
    - apt-get update && apt-get install -y openssh-client git ansible

    # Настройка SSH ключа для Ansible (для подключения к node01)
    - echo "Настройка SSH ключа для Ansible..."
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ansible # Переменная типа File из GitLab
    - chmod 600 ~/.ssh/id_ansible

            # ---> ДОБАВЛЕНО ДЛЯ ОТЛАДКИ <---
    - echo "--- Проверка файла ключа ---"
    - ls -l ~/.ssh/id_ansible
    - echo "Первые 2 строки ключа:"
    - head -n 2 ~/.ssh/id_ansible
    - echo "Последние 2 строки ключа:"
    - tail -n 2 ~/.ssh/id_ansible
    - echo "--- Проверка ключа завершена ---"
    # ---> КОНЕЦ ОТЛАДКИ <---

    - export ANSIBLE_HOST_KEY_CHECKING=False # Отключаем проверку ключа хоста

    # Клонирование Ansible репозитория
    - echo "Клонирование Ansible репозитория в $ANSIBLE_CLONE_DIR..."
    - git clone "$ANSIBLE_REPO_URL" "$ANSIBLE_CLONE_DIR"

  script:
    - echo "Запуск Ansible Playbook для Docker-деплоя..."
    # Вызываем плейбук из склонированного репо
    # Убрали --private-key и переменные для registry_user/password/url
    - >-
      ansible-playbook -i "$ANSIBLE_CLONE_DIR/inventory.ini" "$ANSIBLE_CLONE_DIR/deploy_backend.yml"
      -e "registry_image=$REGISTRY_IMAGE"
      -e "image_tag=$IMAGE_TAG"
      -e "gitlab_db_url=$DB_URL"
      -e "gitlab_db_user=$DB_USER"
      -e "gitlab_db_password=$DB_PASSWORD"
      -e "gitlab_mysql_database=$MYSQL_DATABASE"
      -e "gitlab_mysql_root_password=$MYSQL_ROOT_PASSWORD"
      -e "gitlab_mail_host=$MAIL_HOST"
      -e "gitlab_mail_port=$MAIL_PORT"
      -e "gitlab_mail_username=$MAIL_USERNAME"
      -e "gitlab_mail_password=$MAIL_PASSWORD"

